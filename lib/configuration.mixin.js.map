{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/configuration.mixin.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'UCDB/CONFIGURATION'\nlog                       = CND.get_logger 'plain',     badge\ninfo                      = CND.get_logger 'info',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\nalert                     = CND.get_logger 'alert',     badge\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\nFS                        = require 'fs'\nFSP                       = FS.promises\nPATH                      = require 'path'\n{ assign\n  jr }                    = CND\n{ cwd_abspath\n  cwd_relpath\n  here_abspath\n  _drop_extension\n  project_abspath }       = require './helpers'\ntypes                     = require './types'\n#...........................................................................................................\n{ isa\n  validate\n  type_of }               = types\n#...........................................................................................................\nglob                      = require 'glob'\nMIRAGE                    = require 'sqlite-file-mirror'\n\n\n#-----------------------------------------------------------------------------------------------------------\n@_add_sources = ( me ) ->\n  ### TAINT derive table name from filename ###\n  ### TAINT avoid repetition, implement method to overwrite (SQL drop, create if (not) exists) ###\n  #.........................................................................................................\n  MIRAGE.drop_source  me.mirage,  'cfg_fontnick_and_false_fallbacks'\n  MIRAGE.add_source   me.mirage,\n    name:                         'cfg_fontnick_and_false_fallbacks'\n    path:       project_abspath   'cfg/fontnick-and-false-fallbacks.txt'\n    fields: [\n      { name: 'linenr',   type: 'integer', null:  false,                }\n      { name: 'fontnick', type: 'text',    null:  false,  unique: true, }\n      { name: 'probe',    type: 'text',    null:  false,                }\n      ]\n    format:     'wsv'\n  #.........................................................................................................\n  MIRAGE.drop_source  me.mirage,  'cfg_rsgs_and_blocks'\n  MIRAGE.add_source   me.mirage,\n    name:                         'cfg_rsgs_and_blocks'\n    path:       project_abspath   'cfg/rsgs-and-blocks.txt'\n    fields: [\n      { name: 'linenr',     type: 'integer',  null: false,                }\n      { name: 'icgroup',    type: 'text',     null: false,  unique: true, }\n      { name: 'rsg',        type: 'text',     null: false,  unique: true, }\n      { name: 'kanji',      type: 'boolean',  null: false,                }\n      { name: 'range',      type: 'text',     null: false,                }\n      { name: 'blockname',  type: 'text',     null: false,                }\n      ]\n    format:     'wsv'\n  #.........................................................................................................\n  MIRAGE.drop_source  me.mirage,  'cfg_fontnicks_and_files'\n  MIRAGE.add_source   me.mirage,\n    name:                         'cfg_fontnicks_and_files'\n    path:       project_abspath   'cfg/fontnicks-and-files.txt'\n    fields: [\n      { name: 'linenr',   type: 'integer', null:  false,                }\n      { name: 'fontnick', type: 'text',    null:  false,  unique: true, }\n      { name: 'filename', type: 'text',    null:  false,                }\n      { name: 'otf',      type: 'text',    null:  true,  default: null, }\n      ]\n    format:     'wsv'\n  #.........................................................................................................\n  MIRAGE.drop_source  me.mirage,  'cfg_styles_codepoints_and_fontnicks'\n  MIRAGE.add_source   me.mirage,\n    name:                         'cfg_styles_codepoints_and_fontnicks'\n    path:       project_abspath   'cfg/styles-codepoints-and-fontnicks.txt'\n    fields: [\n      { name: 'linenr',     type: 'integer', null:  false,                }\n      { name: 'styletag',   type: 'text',    null:  false,                }\n      { name: 'ranges',     type: 'text',    null:  false,                }\n      { name: 'fontnick',   type: 'text',    null:  false,                }\n      { name: 'glyphstyle', type: 'text',    null:  true, default: null,  }\n      ]\n    format:     'wsv'\n  #.........................................................................................................\n  MIRAGE.drop_source  me.mirage,  'cfg_glyphsets'\n  MIRAGE.add_source   me.mirage,\n    name:                         'cfg_glyphsets'\n    path:       project_abspath   'cfg/glyphsets.txt'\n    fields: [\n      { name: 'linenr',     type: 'integer', null:  false,                }\n      { name: 'setname',    type: 'text',    null:  false,                }\n      { name: 'glyphs',     type: 'text',    null:  false,                }\n      ]\n    format:     'wsv'\n  #.........................................................................................................\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@read_configuration = ( me ) ->\n  me.mirage = MIRAGE.new_mirror me.db.$.db\n  @_add_sources me\n  await MIRAGE.refresh me.mirage\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@_cidrange_from_rsg = ( me, rsg ) ->\n  unless ( rows = [ ( me.db.cidrange_from_rsg { rsg, })..., ] ).length is 1\n    throw new Error \"^ucdb/cfg@2282 unknown RSG #{rpr rsg}\"\n  return rows[ 0 ]\n\n#-----------------------------------------------------------------------------------------------------------\n@_cidrange_from_text_with_rsgs = ( me, range_txt ) ->\n  if range_txt.startsWith 'rsg:'\n    return @_cidrange_from_rsg me, range_txt.replace /^rsg:/, ''\n  return @_cidrange_from_text_without_rsgs me, range_txt\n\n#-----------------------------------------------------------------------------------------------------------\n@_cidrange_from_text_without_rsgs = ( me, range_txt ) ->\n  unless ( R = @_optional_cidrange_from_text_without_rsgs range_txt )?\n    throw new Error \"^ucdb/cfg@3388 unknown format for field 'ranges': #{rpr range_txt}\"\n  validate.ucdb_cid R.first_cid\n  validate.ucdb_cid R.last_cid\n  return R\n\n#-----------------------------------------------------------------------------------------------------------\n@_optional_cidrange_from_text_without_rsgs = ( range_txt ) ->\n  ### TAINT consider doing this in types/`cast` ###\n  ### Given a text, try to interpret it as a CID range, considering the following alternatives:\n    * an `*` (asterisk), indicating all codepoints;\n    * a character literal like `'字'` or `'x'`, indicated by single quotes;\n    * a hexadecimal CID, indicated by a leading `0x`, or\n    * a hexadecimal CID range of the form `0x000..0x999` (with two dots).\n    A `null` is returned in case none of the above is applicable.\n  ###\n  first_cid = null\n  last_cid  = null\n  #.........................................................................................................\n  if range_txt is \"*\"\n    ### any codepoint: ###\n    first_cid = 0x000020\n    last_cid  = 0x10ffff\n  #.........................................................................................................\n  else if range_txt.startsWith \"'\"\n    ### character literal: ###\n    glyph = range_txt.replace /// ^ ' ( . ) ' ///us, '$1'\n    validate.chr glyph\n    first_cid = glyph.codePointAt 0\n  #.........................................................................................................\n  else if range_txt.startsWith '0x'\n    if ( cids_hex = range_txt.split '..' ).length is 2\n      ### hexadecimal CID range of the form `0x000..0x999` (with two dots) ###\n      first_cid = parseInt cids_hex[ 0 ][ 2 .. ], 16\n      last_cid  = parseInt cids_hex[ 1 ][ 2 .. ], 16\n    else\n      ### hexadecimal CID, indicated by a leading `0x` ###\n      first_cid = parseInt range_txt[ 2 .. ], 16\n  #.........................................................................................................\n  else\n    return null\n  #.........................................................................................................\n  last_cid ?= first_cid\n  return { first_cid, last_cid, }\n\n#-----------------------------------------------------------------------------------------------------------\n@compile_glyphsets_configuration = ( me ) ->\n  info '^ucdb/cfg@8873^', \"compiling glyphsets configuration table\"\n  #.........................................................................................................\n  try\n    #.......................................................................................................\n    cid_pattern       = /// \\[  0x (?<cid>       [ 0-9 a-f ]+ )                                      \\] ///gu\n    cid_range_pattern = /// \\[  0x (?<first_cid> [ 0-9 a-f ]+ ) \\.\\. 0x (?<last_cid>  [ 0-9 a-f ]+ ) \\] ///gu\n    for row from me.db.read_cfg_glyphsets()\n      { linenr\n        setname\n        glyphs } = row\n      glyphs_prv  = glyphs\n      glyphs      = glyphs.replace /\\x20/g, ''\n      #.....................................................................................................\n      glyphs = glyphs.replace cid_pattern, ( _..., groups ) ->\n        cid = parseInt groups.cid, 16\n        return String.fromCodePoint cid\n      #.....................................................................................................\n      glyphs = glyphs.replace cid_range_pattern, ( _..., groups ) ->\n        first_cid = parseInt groups.first_cid, 16\n        last_cid  = parseInt groups.last_cid,  16\n        return ( String.fromCodePoint cid for cid in [ first_cid .. last_cid ] ).join ''\n      #.....................................................................................................\n      if glyphs_prv != glyphs\n        me.dbw.update_cfg_glyphsets { linenr, setname, glyphs, }\n  #.........................................................................................................\n  catch error\n    throw new Error \"\"\"^ucdb/cfg@7631^ when trying to compile row\n      #{jr row}\n      from configuration, an error occurred: #{error.message}\"\"\"\n  #.........................................................................................................\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@compile_configurations = ( me ) ->\n  info '^ucdb/cfg@8873^', \"compiling configuration tables\"\n  me.db.prepare_cfg_tables()\n  #.........................................................................................................\n  try\n    #.......................................................................................................\n    for row from me.dbr.read_cfg_rsgs_and_blocks()\n      { linenr, }               = row\n      { first_cid, last_cid, }  = @_cidrange_from_text_without_rsgs me, row.range_txt\n      me.dbw.update_cfg_rsgs_and_blocks { linenr, first_cid, last_cid, }\n    #.......................................................................................................\n    for row from me.db.read_cfg_styles_codepoints_and_fontnicks()\n      { linenr, }               = row\n      { first_cid, last_cid, }  = @_cidrange_from_text_with_rsgs me, row.range_txt\n      ### first check for there being a glyphstyle at all, second check b/c might in fact just be a comment: ###\n      if row.glyphstyle? and ( glyphstyle = @compile_style_txt me, row.glyphstyle )?\n        glyphstyle_glyph  = glyphstyle.glyph  ? null\n        glyphstyle_push   = glyphstyle.push   ? null\n        glyphstyle_raise  = glyphstyle.raise  ? null\n        glyphstyle_scale  = glyphstyle.scale  ? null\n        me.dbw.update_cfg_styles_codepoints_and_fontnicks { linenr, first_cid, last_cid,\n          glyphstyle_glyph, glyphstyle_push, glyphstyle_raise, glyphstyle_scale, }\n      else\n        me.dbw.update_cfg_styles_codepoints_and_fontnicks { linenr, first_cid, last_cid, }\n  #.........................................................................................................\n  catch error\n    throw new Error \"\"\"^ucdb/cfg@7632^ when trying to compile row\n      #{jr row}\n      from configuration, an error occurred: #{error.message}\"\"\"\n  #.........................................................................................................\n  me.db.finalize_cfg_tables()\n\n\n\n\n\n"
  ]
}