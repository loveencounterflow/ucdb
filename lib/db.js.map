{
  "version": 3,
  "file": "db.js",
  "sourceRoot": "..",
  "sources": [
    "src/db.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n'use strict'\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'UCDB/DB'\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\ninfo                      = CND.get_logger 'info',      badge\nurge                      = CND.get_logger 'urge',      badge\nhelp                      = CND.get_logger 'help',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\nPATH                      = require 'path'\n# FS                        = require 'fs'\n{ assign\n  jr }                    = CND\n{ cwd_abspath\n  cwd_relpath\n  here_abspath\n  _drop_extension\n  project_abspath }       = require './helpers'\n#...........................................................................................................\njoin_path                 = ( P... ) -> PATH.resolve PATH.join P...\nboolean_as_int            = ( x ) -> if x then 1 else 0\n{ inspect, }              = require 'util'\nxrpr                      = ( x ) -> inspect x, { colors: yes, breakLength: Infinity, maxArrayLength: Infinity, depth: Infinity, }\nxrpr2                     = ( x ) -> inspect x, { colors: yes, breakLength: 80,       maxArrayLength: Infinity, depth: Infinity, }\n#...........................................................................................................\nICQL                      = require 'icql'\nproject_abspath           = ( P... ) -> here_abspath __dirname, '..', P...\n#...........................................................................................................\ntypes                     = require './types'\n{ isa\n  validate\n  cast\n  declare\n  size_of\n  last_of\n  type_of }               = types\n\n\n#-----------------------------------------------------------------------------------------------------------\n@_get_icql_settings = ( settings ) ->\n  ### TAINT path within node_modules might differ ###\n  ### TAINT extensions should conceivably be configured in `*.icql` file or similar ###\n  # R.db_path   = join_path __dirname, '../../db/data.db'\n  defaults          =\n    db_path:          project_abspath './db/mkts.db'\n    icql_path:        project_abspath './db/mkts.icql'\n    clear:            false\n  R                 = assign {}, defaults, settings\n  R.db_path         = cwd_abspath R.db_path\n  R.icql_path       = cwd_abspath R.icql_path\n  return R\n\n#-----------------------------------------------------------------------------------------------------------\n@new_db = ( settings ) ->\n  settings              = @_get_icql_settings settings\n  try\n    db                    = ICQL.bind settings\n  catch error\n    message = \"\"\"^ucdb#3987^ When trying to open database at\n    #{settings.db_path}\n    with ICQL file at\n    #{settings.icql_path}\n    an error occurred:\n    #{error.message}\n    \"\"\".replace /\\n/g, ' '\n    throw new Error message\n  @load_extensions      db\n  @set_pragmas          db\n  #.........................................................................................................\n  ### TAINT consider to move clearing DB to ICQL ###\n  if settings.clear\n    clear_count = db.$.clear()\n    # info \"µ33211 deleted #{clear_count} objects\"\n  #.........................................................................................................\n  @create_udfs  db\n  @create_api   db\n  #.........................................................................................................\n  return db\n\n#-----------------------------------------------------------------------------------------------------------\n@set_pragmas = ( db ) ->\n  db.$.pragma 'foreign_keys = on'\n  db.$.pragma 'synchronous = off' ### see https://sqlite.org/pragma.html#pragma_synchronous ###\n  db.$.pragma 'journal_mode = WAL' ### see https://github.com/JoshuaWise/better-sqlite3/issues/125 ###\n  #.........................................................................................................\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@load_extensions = ( db ) ->\n  return null\n  # extensions_path = project_abspath './sqlite-for-mingkwai-ime/extensions'\n  # debug 'µ39982', \"extensions_path\", extensions_path\n  # db.$.load join_path extensions_path, 'spellfix.so'\n  # db.$.load join_path extensions_path, 'csv.so'\n  # db.$.load join_path extensions_path, 'regexp.so'\n  # db.$.load join_path extensions_path, 'series.so'\n  # db.$.load join_path extensions_path, 'nextchar.so'\n  # # db.$.load join_path extensions_path, 'stmt.so'\n  # #.........................................................................................................\n  # return null\n\n#-----------------------------------------------------------------------------------------------------------\n@create_udfs = ( db ) ->\n\n  #---------------------------------------------------------------------------------------------------------\n  db.$.function 'echo', { deterministic: false, varargs: true }, ( P... ) ->\n    ### Output text to command line. ###\n    ### TAINT consider to use logging method to output to app console. ###\n    urge ( CND.grey 'DB' ), P...\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  db.$.function 'e', { deterministic: false, varargs: false }, ( x ) ->\n    ### Output text to command line, but returns single input value so can be used within an expression. ###\n    urge ( CND.grey 'DB' ), rpr x\n    return x\n\n  #---------------------------------------------------------------------------------------------------------\n  db.$.function 'e', { deterministic: false, varargs: false }, ( mark, x ) ->\n    ### Output text to command line, but returns single input value so can be used within an expression. ###\n    urge ( CND.grey \"DB #{mark}\" ), rpr x\n    return x\n\n  #---------------------------------------------------------------------------------------------------------\n  db.$.function 'json_as_hollerith', { deterministic: false, varargs: false }, ( x ) ->\n    return db.$.as_hollerith JSON.parse x\n\n  #---------------------------------------------------------------------------------------------------------\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@create_api = ( db ) ->\n  db.cast_row = ( row ) ->\n    validate.mirage_main_row row\n    R           = assign {}, row\n    R.vnr_blob  = db.$.as_hollerith R.vnr\n    R.vnr       = jr R.vnr\n    R.stamped   = cast.boolean 'number', R.stamped\n    return R\n  #.........................................................................................................\n  db.insert = ( row ) -> db._insert db.cast_row row\n  db.update = ( row ) -> db._update db.cast_row row\n  return null\n\n\n\n\n\n\n"
  ]
}