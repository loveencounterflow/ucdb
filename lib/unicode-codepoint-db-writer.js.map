{
  "version": 3,
  "file": "unicode-codepoint-db-writer.js",
  "sourceRoot": "..",
  "sources": [
    "src/unicode-codepoint-db-writer.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'UNICODE-CODEPOINT-DB-WRITER'\nlog                       = CND.get_logger 'plain',     badge\ninfo                      = CND.get_logger 'info',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\nalert                     = CND.get_logger 'alert',     badge\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\nFS                        = require 'fs'\nFSP                       = FS.promises\nPATH                      = require 'path'\n{ assign\n  jr }                    = CND\n{ cwd_abspath\n  cwd_relpath\n  here_abspath\n  _drop_extension\n  project_abspath }       = require './helpers'\n@types                    = require './types'\n#...........................................................................................................\n{ isa\n  validate\n  declare\n  size_of\n  last_of\n  type_of }               = @types\n#...........................................................................................................\n_glob                     = require 'glob'\nglob                      = ( require 'util' ).promisify _glob\nMKNCR                     = require 'mingkwai-ncr'\nrequire                   './exception-handler'\nPD                        = require 'pipedreams'\nSP                        = require 'steampipes'\n{ $\n  $async\n  $watch\n  $show  }                = SP.export()\n#...........................................................................................................\nmkts_options              = require 'mingkwai-typesetter/lib/options'\nmkts_glyph_styles         = mkts_options.tex[ 'glyph-styles' ]\nmkts_fontfiles            = mkts_options.fonts.files\n#...........................................................................................................\nrunmode                   = 'debug_small'\nrunmode                   = 'production'\nrunmode                   = 'debug'\n\n#-----------------------------------------------------------------------------------------------------------\ncid_ranges_by_runmode  =\n  debug: [\n    [ 0x00001, 0x000ff, ]\n    [ 0x03002, 0x03002, ]\n    [ 0x021bb, 0x021bb, ]\n    [ 0x03010, 0x03010, ]\n    [ 0x056d5, 0x056d9, ]\n    [ 0x04df0, 0x04e02, ]\n    # [ 0x09fba, 0x09fba, ] # babelstonehan\n    [ 0x0e100, 0x0e10d, ]\n    [ 0x0e10f, 0x0e111, ]\n    [ 0x20000, 0x20006, ]\n    '扌亻釒钅冫牜飠'\n    ]\n  debug_small: [\n    [ 0x03002, 0x03002, ]\n    [ 0x04df0, 0x04e02, ]\n    ]\n  production: [\n    [ 0x00001, 0x000ff, ]\n    [ 0x00100, 0x0ffff, ]\n    [ 0x1d400, 0x1d7ff, ] # Mathematical Alphanumeric Symbols\n    [ 0x20000, 0x2ebef, ] # CJK Ext. B thru F\n    ]\nunless ( cid_ranges = cid_ranges_by_runmode[ runmode ] )?\n  throw new Error \"^ucdbw#887^ unknown runmode #{rpr runmode}\"\n\n#-----------------------------------------------------------------------------------------------------------\n@_readable_stream_from_text = ( text ) ->\n  ### thx to https://stackoverflow.com/a/22085851/7568091 ###\n  R = new ( require 'stream' ).Readable()\n  R._read = () => {} # redundant?\n  R.push text\n  R.push null\n  return R\n\n#-----------------------------------------------------------------------------------------------------------\n@read_rsgs = ( me ) -> return new Promise ( resolve ) ->\n  #.........................................................................................................\n  $as_datom = ->\n    lnr = 0\n    return $ ( line, send ) ->\n      lnr++\n      return null if ( isa.blank_text line )\n      return null if ( line.match /^\\s*#/ )?\n      unless ( match = line.match /^(?<new_rsg>\\S+)\\s+(?<old_rsg>\\S+)\\s+(?<block_name>.+)$/ )?\n        throw new Error \"^ucdbw#88732^ unexpected line format in line #{lnr}\"\n      send PD.new_datom '^entry', { match.groups..., lnr, }\n  #.........................................................................................................\n  $collect = ( collector ) ->\n    last = Symbol 'last'\n    return $ { last, }, ( d, send ) ->\n      if d is last\n        collector.new_by_old[ 'u'       ] = 'u-----'\n        collector.old_by_new[ 'u-----'  ] = 'u'\n        collector.new_by_old[ 'jzr'     ] = 'jzr---'\n        collector.old_by_new[ 'jzr---'  ] = 'jzr'\n        return send collector\n      collector.new_by_old[ d.old_rsg ] = d.new_rsg\n      collector.old_by_new[ d.new_rsg ] = d.old_rsg\n  #.........................................................................................................\n  # debug FS.readFileSync path\n  # debug path\n  path      = project_abspath '../../io/mingkwai-rack/jzrds/ucdx/rsgs.txt'\n  pipeline  = []\n  rsgs      = { new_by_old: {}, old_by_new: {} }\n  pipeline.push SP.read_from_file path, 10\n  pipeline.push SP.$split()\n  pipeline.push $as_datom()\n  pipeline.push $collect rsgs\n  # pipeline.push SP.$show()\n  pipeline.push SP.$drain -> me.rsgs = rsgs; resolve null\n  SP.pull pipeline...\n\n\n#-----------------------------------------------------------------------------------------------------------\n@_get_iclabel = ( me, cid, glyph, csg, old_rsg ) ->\n  unless ( new_rsg = me.rsgs.new_by_old[ old_rsg ] )?\n    throw new Error \"^ucdbw#36662^ unknown RSG #{rpr old_rsg}\"\n  # A:uc0---:005750:坐\n  switch csg\n    when 'u'    then  realm = 'A'; swatch = glyph\n    when 'jzr'  then  realm = 'I'; swatch = glyph\n    when 'test' then  realm = 'X'; swatch = glyph\n    else              realm = 'L'; swatch = '�'\n  cid_hex = ( cid.toString 16 ).padStart 6, '0'\n  return \"#{realm}:#{new_rsg}:#{cid_hex}:#{swatch}\"\n\n#-----------------------------------------------------------------------------------------------------------\n@read_fontnicks = ( me ) ->\n  R = {}\n  for entry in mkts_fontfiles\n    fontnick  = @_fontnick_from_texname entry.texname\n    filename  = entry.filename\n    otf       = entry.otf ? null\n    otf_txt   = if otf? then \" # #{otf}\" else ''\n    ### TAINT should collect OTF feature strings as well ###\n    # debug \"#{fontnick}\\t\\t\\t\\t#{filename}#{otf_txt}\"\n    R[ fontnick ]     = { filename, }\n    R[ fontnick ].otf = otf if otf?\n  return R\n\n# #-----------------------------------------------------------------------------------------------------------\n# @_filesize_from_path = ( me, filepath ) -> ( await FSP.stat filepath ).size\n\n#-----------------------------------------------------------------------------------------------------------\n@_build_fontcache = ( me ) -> new Promise ( resolve, reject ) =>\n  ### TAINT cache data to avoid walking the tree many times, see https://github.com/isaacs/node-glob#readme ###\n  # validate.ucdbw_clean_filename filename\n  #.........................................................................................................\n  fonts_home  = project_abspath '.', 'font-sources'\n  pattern     = fonts_home + '/**/*'\n  settings    = { matchBase: true, follow: true, stat:true, }\n  R           = {}\n  info \"^ucdbw#77382^ building font cache...\"\n  globber     = new _glob.Glob pattern, settings, ( error, filepaths ) =>\n    return reject error if error?\n    info \"^ucdbw#77383^ found #{filepaths.length} files\"\n    for filepath in filepaths\n      unless ( stat = globber.statCache[ filepath ] )?\n        ### TAINT stat missing file instead of throwing error ###\n        return reject new Error \"^77464^ not found in statCache: #{rpr filepath}\"\n      filename      = PATH.basename filepath\n      continue if R[ filename ]?\n      filesize      = stat.size\n      R[ filename ] = { filepath, filesize, }\n    resolve R\n\n#-----------------------------------------------------------------------------------------------------------\n@_describe_filename = ( me, filename ) ->\n  filepath  = await @_locate_fontfile     me, filename\n  filesize  = await @_filesize_from_path  me, filepath\n  return { filepath, filesize, }\n\n#-----------------------------------------------------------------------------------------------------------\n@populate_fontnick_table = ( me ) -> new Promise ( resolve, reject ) =>\n  me.fontnicks    = @read_fontnicks me\n  font_cache      = await @_build_fontcache me\n  preamble        = []\n  data            = []\n  line_count      = 0\n  preamble.push me.db.create_table_fontnicks_first()\n  #.........................................................................................................\n  for fontnick, { filename, otf, } of me.fontnicks\n    line_count++\n    unless ( cache_entry = font_cache[ filename ] )?\n      warn '^4432^', \"unable to find fontnick #{fontnick}, filename #{filename}\"\n      continue\n    { filepath\n      filesize }    = cache_entry\n    otf            ?= null\n    row             = { fontnick, filename, filepath, filesize, otf, }\n    data.push ( me.db.create_table_fontnicks_middle row ) + ','\n  if ( last_idx = data.length - 1 ) > -1\n    data[ last_idx ] = data[ last_idx ].replace /,\\s*$/g, ''\n  #.........................................................................................................\n  sql         = [ preamble..., data..., ';', ].join '\\n'\n  me.db.$.execute sql\n  me.line_count += line_count\n  resolve null\n\n#-----------------------------------------------------------------------------------------------------------\n@_fontnick_from_texname = ( texname ) -> ( texname.replace 'mktsFontfile', '' ).toLowerCase()\n\n#-----------------------------------------------------------------------------------------------------------\n@_fontnick_from_tex_block = ( me, tex_block ) ->\n  return null unless tex_block?\n  # unless tex_block?\n  #   throw new Error \"^ucdbw#33422 tex_block must not be null\"\n  unless ( match = tex_block.match /^\\\\(?<texstyle>[a-zA-Z]+)\\{\\}$/ )?\n    throw new Error \"^ucdbw#33423 unexpected tex_block format #{rpr tex_block}\"\n  texstyle  = style?.cmd ? match.groups.texstyle\n  # texstyle  = @_fontnick_from_texname texstyle\n  unless ( fontnick = @fontnick_by_texstyles[ texstyle ] )?\n    throw new Error \"^ucdbw#33423 unknown texstyle #{rpr texstyle}\"\n  return fontnick\n\n#-----------------------------------------------------------------------------------------------------------\n@_fontnick_from_style = ( me, style = null ) ->\n  return null unless ( style                )?\n  return null unless ( command = style.cmd  )?\n  validate.nonempty_text command\n  unless ( fontnick = @fontnick_by_texstyles[ command ] )?\n    throw new Error \"^ucdbw#33424 unknown texstyle #{rpr texstyle}\"\n  return fontnick\n\n#-----------------------------------------------------------------------------------------------------------\n@_fontnick_from_style_or_tex_block = ( me, style, tex_block ) ->\n  # try\n  fontnick_A = @_fontnick_from_style      me, style\n  fontnick_B = @_fontnick_from_tex_block  me, tex_block\n  # catch error\n  #   if not me._seen_unknown.has error.message\n  #     me._seen_unknown.add error.message\n  #     warn '^47474', fncr, glyph, error.message\n  return fontnick_A ? fontnick_B ? null\n\n#-----------------------------------------------------------------------------------------------------------\n@_cleanup_style = ( me, style ) ->\n  return null unless style?\n  ### Remove redundant `cmd` property, drop empty styles: ###\n  delete style.cmd  if style.cmd?\n  return if ( Object.keys style ).length is 0 then null else style\n\n#-----------------------------------------------------------------------------------------------------------\n@populate_main_table = ( me ) -> new Promise ( resolve, reject ) =>\n  preamble          = []\n  data              = []\n  line_count        = 0\n  me._seen_unknown  = new Set()\n  preamble.push me.db.create_table_main_first()\n  await @read_rsgs me\n  #.........................................................................................................\n  for cid_range in cid_ranges\n    #.......................................................................................................\n    ### TAINT use casting or call subroutine to derive range iterator ###\n    if isa.text cid_range\n      cids = ->\n        for _glyph in [ cid_range... ]\n          yield _glyph.codePointAt 0\n    #.......................................................................................................\n    else\n      cids = ->\n        for cid in [ cid_range[ 0 ] .. cid_range[ 1 ] ]\n          yield cid\n    #.......................................................................................................\n    for cid from cids()\n      whisper '^77763^', ( CND.format_number line_count ) if ( ++line_count % 10000 ) is 0\n      description = MKNCR.describe cid\n      glyph       = String.fromCodePoint cid\n      style       = mkts_glyph_styles[ glyph ] ? null\n      tags        = ( description?.tag ? [] ).sort()\n      is_u9cjkidg = ( 'assigned' in tags ) and ( 'cjk' in tags ) and ( 'ideograph' in tags )\n      tags        = ';' + ( tags.join ';' ) + ';'\n      csg         = description?.csg            ? null\n      rsg         = description?.rsg            ? null\n      fncr        = description?.fncr           ? null\n      sfncr       = description?.sfncr          ? null\n      ncr         = description?.ncr            ? null\n      xncr        = description?.xncr           ? null\n      iclabel     = @_get_iclabel me, cid, glyph, csg, rsg\n      # tex_glyph   = description?.tex?.codepoint ? null\n      #.....................................................................................................\n      tex_block   = description?.tex?.block     ? null\n      fontnick    = @_fontnick_from_style_or_tex_block me, style, tex_block\n      unless fontnick?\n        warn \"^ucdbw#5775^ missing fontnick for #{fncr} #{glyph}\"\n        continue\n      style       = jr @_cleanup_style me, style\n      #.....................................................................................................\n      row         = {\n        iclabel, glyph, cid, is_u9cjkidg, tags,\n        csg, rsg, fncr, sfncr, ncr, xncr,\n        fontnick, style, }\n        # fontnick, style, tex_block, tex_glyph, }\n      data.push ( me.db.create_table_main_middle row ) + ','\n  #.........................................................................................................\n  if ( last_idx = data.length - 1 ) > -1\n    data[ last_idx ] = data[ last_idx ].replace /,\\s*$/g, ''\n  #.........................................................................................................\n  sql             = [ preamble..., data..., ';', ].join '\\n'\n  me.db.$.execute sql\n  me.line_count  += line_count\n  me.db.create_main_indexes()\n  #.........................................................................................................\n  ### Fallback glyph: ###\n  if ( style = mkts_options.tex.fallback_glyph )?\n    line_count++\n    fontnick        = @_fontnick_from_style_or_tex_block me, style, null\n    style           = jr @_cleanup_style me, style\n    me.db.insert_fallback { fontnick, style, }\n  #.........................................................................................................\n  resolve { line_count, }\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@new_ucdb = ( settings = {} ) ->\n  # validate.mirage_create_settings settings\n  defaults =\n    db_path:    './db/ucdb.db'\n    icql_path:  './db/ucdb.icql'\n  settings                = { defaults..., settings..., }\n  R                       = {}\n  R.db                    = ( require './db' ).new_db settings\n  R.dbr                   = R.db\n  R.dbw                   = ( require './db' ).new_db settings\n  R.line_count            = 0\n  return R\n\n#-----------------------------------------------------------------------------------------------------------\n@create = ( settings = {} ) -> new Promise ( resolve, reject ) =>\n  me = @new_ucdb settings\n  await @populate_fontnick_table  me\n  await @populate_main_table      me\n  me.db.create_view_main_with_deltas_etc()\n  resolve me\n\n#-----------------------------------------------------------------------------------------------------------\n@write_ucdb = ->\n  settings =\n    db_path:    './db/ucdb.db'\n    icql_path:  './db/ucdb.icql'\n  t0      = Date.now()\n  try\n    ucdb  = await @create settings\n  catch error\n    warn error.message\n    process.exit 1\n  t1      = Date.now()\n  dts     = ( ( t1 - t0 ) / 1000 ).toFixed 3\n  help 'µ77787', \"wrote #{ucdb.line_count} lines in #{dts} s\"\n  count = 0\n  for row from ucdb.db.read_lines()\n    count++\n    break if count > 5\n    info 'µ33211', jr row\n  help 'ok'\n\n#-----------------------------------------------------------------------------------------------------------\n### TAINT must go to configuration file ###\n@fontnick_by_texstyles =\n  latin:                                'lmromantenregular'\n  cnjzr:                                'jizurathreeb'\n  cnxa:                                 'sunexta'\n  cnxb:                                 'sunflowerucjkxb'\n  cnxc:                                 'hanaminb'\n  cnxd:                                 'babelstonehan'\n  cn:                                   'sunexta'\n  hg:                                   'nanummyeongjo'\n  hi:                                   'ipamp'\n  ka:                                   'ipamp'\n  mktsRsgFb:                            'sunexta'\n  cncone:                               'babelstonehan' # CJK Compatibility 1\n  cnUcjkcmp:                            'ipaexm'        # CJK Compatibility 1\n  cnUcjkcmpf:                           'hanamina'      # CJK Compatibility 1\n  cnUcjkcmpione:                        'hanamina'      # CJK Compatibility 1\n  cnUcjkcmpitwo:                        'hanamina'      # CJK Compatibility 2\n  cnrone:                               'sunexta'       # CJK Radicals 1\n  cnrtwo:                               'sunexta'       # CJK Radicals 2\n  cnsym:                                'hanamina'\n  cnstrk:                               'sunexta'\n  cnencsupp:                            'sarasaregular'\n  cnxBabel:                             'babelstonehan'\n  cnxHanaA:                             'hanamina'\n  cnxHanaB:                             'hanaminb'\n  cnxSunXA:                             'sunexta'\n  cnxUming:                             'uming'\n  #.........................................................................................................\n  cnxJzr:                               'jizurathreeb'\n  mktsFontfileAsanamath:                'asanamath'\n  mktsFontfileCwtexqheibold:            'cwtexqheibold'\n  mktsFontfileDejavuserif:              'dejavuserif'\n  mktsFontfileEbgaramondtwelveregular:  'ebgaramondtwelveregular'\n  mktsFontfileNanummyeongjo:            'nanummyeongjo'\n  mktsFontfileSunexta:                  'sunexta'\n  mktsStyleBoxDrawing:                  'iosevkatermslabmedium'\n\n#-----------------------------------------------------------------------------------------------------------\n### TAINT must go to configuration file ###\n@fontnick_by_rsgs =\n  'u-cjk-cmpi1':          'babelstonehan'\n  'u-cjk-xd':             'babelstonehan'\n  'u-cjk-sym':            'hanamina'\n  'u-cjk-xc':             'hanaminb'\n  'u-cjk-hira':           'ipamp'\n  'u-cjk-kata':           'ipamp'\n  'jzr':                  'jizurathreeb'\n  'u-cdm':                'lmromantenregular'\n  'u-cyrl':               'lmromantenregular'\n  'u-cyrl-s':             'lmromantenregular'\n  'u-grek':               'lmromantenregular'\n  'u-latn':               'lmromantenregular'\n  'u-latn-a':             'lmromantenregular'\n  'u-latn-b':             'lmromantenregular'\n  'u-punct':              'lmromantenregular'\n  'u-latn-1':             'lmromantenregular'\n  'u-hang-syl':           'nanummyeongjo'\n  'u-arrow':              'sunexta'\n  'u-arrow-b':            'sunexta'\n  'u-boxdr':              'sunexta'\n  'u-cjk-cmpf':           'sunexta'\n  'u-llsym':              'sunexta'\n  'u':                    'sunexta'\n  'u-cjk-strk':           'sunexta'\n  'u-cjk-xa':             'sunexta'\n  'u-geoms':              'sunexta'\n  'u-cjk':                'sunexta'\n  'u-cjk-rad2':           'sunexta'\n  'u-cjk-xb':             'sunflowerucjkxb'\n\n# keys = [ 'cn', 'cncone', 'cnjzr', 'cnrone', 'cnrtwo', 'cnstrk', 'cnsym', 'cnxa', 'cnxb', 'cnxBabel', 'cnxc',\n#   'cnxd', 'cnxHanaA', 'cnxHanaB', 'cnxJzr', 'cnxSunXA', 'cnxUming', 'hg', 'hi', 'ka', 'latin',\n#   'mktsFontfileAsanamath', 'mktsFontfileCwtexqheibold', 'mktsFontfileDejavuserif',\n#   'mktsFontfileEbgaramondtwelveregular', 'mktsFontfileNanummyeongjo', 'mktsFontfileSunexta', 'mktsRsgFb',\n#   'mktsStyleBoxDrawing', ]\n\n# for key in keys\n#   info key unless @fontnick_by_texstyles[ key ]?\n\n\n#-----------------------------------------------------------------------------------------------------------\n@_find_fontnick_ranges = ( me = null ) ->\n  me ?= @new_ucdb()\n  me.db.create_view_main_with_deltas_etc()\n  # for row from me.db.main_with_deltas()\n  #   info '^77763^', row.iclabel, row.fontnick, row.rear_delta_cid, row.fore_delta_cid\n  for row from me.db.fontnick_boundaries()\n    # help '^77456^', row\n    help '^77763^', \\\n      ( CND.yellow row.fontnick.padEnd 30 ),            \\\n      ( CND.blue row.first_iclabel        ),            \\\n      ( CND.blue row.last_iclabel         ),            \\\n      ( CND.grey row.first_cid            ),            \\\n      ( CND.grey row.last_cid             )\n      # ( CND.yellow row.cid.toString 16 ), \\\n      # ( CND.orange if row.last_cid? then row.next_cid.toString 16 else '' )\n\n############################################################################################################\nunless module.parent?\n  do =>\n    # info await @_build_fontcache null\n    await @write_ucdb()\n    # # await @read_rsgs null\n    # @_find_fontnick_ranges()\n    # help await @_describe_filename null, 'DejaVuSansMono-Bold.ttf'\n    # help await @_describe_filename null, 'TH-Khaai-TP2.ttf'\n    # help await @_locate_fontfile 'TH-Khaai-*.ttf'\n\n# all_tags = \"\"\"ascii-whitespace assigned bopomofo cjk geta hangeul hexagram hiragana ideograph idl jamo\n#   japanese kana kanbun katakana korean kxr punctuation stroke syllable symbol trigram unassigned vertical\n#   yijing\"\"\"\n\n\n\n"
  ]
}