{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../../src/web/templates.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n# cannot 'use strict'\n\n\n############################################################################################################\nnjs_path                  = require 'path'\nnjs_fs                    = require 'fs'\n#...........................................................................................................\nCND                       = require 'cnd'\nrpr                       = CND.rpr.bind CND\nbadge                     = '明快打字机/TEMPLATES'\nlog                       = CND.get_logger 'plain',     badge\ninfo                      = CND.get_logger 'info',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\nalert                     = CND.get_logger 'alert',     badge\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\n#...........................................................................................................\n# MKTS                      = require './main'\nTEACUP                    = require 'coffeenode-teacup'\nCOMMON                    = require './common'\n# CHR                       = require 'coffeenode-chr'\n#...........................................................................................................\n# _STYLUS                   = require 'stylus'\n# as_css                    = STYLUS.render.bind STYLUS\n# style_route               = njs_path.join __dirname, '../src/mingkwai-typesetter.styl'\n# css                       = as_css njs_fs.readFileSync style_route, encoding: 'utf-8'\n#...........................................................................................................\nSERVER                    = require './server'\n#...........................................................................................................\n{ isa\n  validate\n  cast\n  type_of }               = SERVER.types\n{ jr, }                   = CND\nUCDB                      = require '../..'\n# { walk_cids_in_cid_range\n#   cwd_abspath\n#   cwd_relpath\n#   here_abspath\n#   _drop_extension\n#   project_abspath }       = require '../helpers'\n\n\n#===========================================================================================================\n# TEACUP NAMESPACE ACQUISITION\n#-----------------------------------------------------------------------------------------------------------\nObject.assign @, TEACUP\n\n#-----------------------------------------------------------------------------------------------------------\n# @FULLHEIGHTFULLWIDTH  = @new_tag ( P... ) -> @TAG 'fullheightfullwidth', P...\n# @OUTERGRID            = @new_tag ( P... ) -> @TAG 'outergrid',           P...\n# @LEFTBAR              = @new_tag ( P... ) -> @TAG 'leftbar',             P...\n# @CONTENT              = @new_tag ( P... ) -> @TAG 'content',             P...\n# @RIGHTBAR             = @new_tag ( P... ) -> @TAG 'rightbar',            P...\n# @SHADE                = @new_tag ( P... ) -> @TAG 'shade',               P...\n# @SCROLLER             = @new_tag ( P... ) -> @TAG 'scroller',            P...\n# @BOTTOMBAR            = @new_tag ( P... ) -> @TAG 'bottombar',           P...\n# @FOCUSFRAME           = @new_tag ( P... ) -> @TAG 'focusframe',          P...\n@SVG                  = @new_tag ( P... ) -> @TAG 'svg',                 P...\n#...........................................................................................................\n@JS                   = @new_tag ( route ) -> @SCRIPT type: 'text/javascript',  src: route\n@CSS                  = @new_tag ( route ) -> @LINK   rel:  'stylesheet',      href: route\n# @STYLUS               = ( source ) -> @STYLE {}, _STYLUS.render source\n\n#-----------------------------------------------------------------------------------------------------------\n### TAINT use proper tags ###\n@get_symbol = ( id, clasz = 'symbol' ) ->\n  return @RAW \"<svg class=#{clasz}><use href='/fonts/ucdb.svg##{id}'/></svg>\"\n\n#-----------------------------------------------------------------------------------------------------------\n@get_glyph = ( fontnick, glyph, clasz = 'glyph' ) ->\n  return @RAW \"<svg class=#{clasz}><use href='/fonts/ucdb.svg##{fontnick}-#{glyph}'/></svg>\"\n\n#-----------------------------------------------------------------------------------------------------------\n@GLYPHIMG = ( fontnick, glyph, clasz = 'glyph' ) ->\n  ### TAINT use API to construct route ###\n  url = COMMON.get_url '/v2/glyphimg', { fontnick, glyph, }\n  return @IMG { class: 'glyph', alt: glyph, src: url, }\n\n#-----------------------------------------------------------------------------------------------------------\n@SLUG = ( fontnick, text, settings ) ->\n  ### TAINT use API to construct route ###\n  defaults  = { missing: 'drop', }\n  settings  = { defaults..., settings..., }\n  validate.ucdb_web_layout_SLUG_settings settings\n  url       = COMMON.get_url '/v2/slug', { fontnick, text, }\n  width     = ( Array.from text ).length * ( 685 / 86 ) ### TAINT magic number, should be in styles ###\n  width     = \"#{width}mm\"\n  height    = '10mm' ### TAINT magic number, should be in styles ###\n  style     = \"width:#{width};height:#{height};\"\n  return @IMG { class: 'slug', alt: text, src: url, style, }\n\n#-----------------------------------------------------------------------------------------------------------\n@render_glyph_img = ( fontnick, glyph, clasz = 'glyph' ) ->\n  return @render => @GLYPHIMG fontnick, glyph, clasz\n\n\n#===========================================================================================================\n#\n#-----------------------------------------------------------------------------------------------------------\n@layout = @new_tag =>\n  @DOCTYPE 5\n  @META charset: 'utf-8'\n  @LINK rel: 'shortcut icon', href: '/favicon.ico?x=276187623'\n  # @META 'http-equiv': \"Content-Security-Policy\", content: \"default-src 'self'\"\n  # @META 'http-equiv': \"Content-Security-Policy\", content: \"script-src 'unsafe-inline'\"\n  @JS     '/jquery-3.3.1.js'\n  @JS     '/common.js'\n  @CSS    '/reset.css'\n  @CSS    '/styles-01.css'\n\n\n#===========================================================================================================\n#\n#-----------------------------------------------------------------------------------------------------------\n@inventory = ->\n  #.........................................................................................................\n  key_as_title = ( key ) ->\n    return key.replace /_/g, '-'\n  #.........................................................................................................\n  return @render =>\n    @layout()\n    @HTML { lang: 'en', }, =>\n      @TITLE 'UCDB'\n      # titles = ( ( key_as_title key ) for key of @ when not key.startswith '_' )\n      @H1 => \"UCDB Landing Page\"\n      @UL =>\n        @LI => @A { href: '/long-samples-overview', },  \"long samples overview\"\n        @LI => @A { href: '/slugs',       },  \"slugs\"\n        @LI => @A { href: '/grid',        },  \"grid\"\n        @LI => @A { href: '/dump',        },  \"dump\"\n        @LI => @A { href: '/harfbuzz',    },  \"harfbuzz\"\n\n\n#===========================================================================================================\n#\n#-----------------------------------------------------------------------------------------------------------\n@long_samples_overview = ->\n  #.........................................................................................................\n  return @render =>\n    fontnicks = ( row.fontnick for row from SERVER.O.ucdb.db.fontnicks_with_outlines() )\n    glyphs    = UCDB._XXX_get_all_glyphs_as_list_from_cfg_glyphsets SERVER.O.ucdb\n    @layout()\n    @TITLE 'UCDB'\n    @DIV => \"UCDB\"\n    @H3 => \"Embedding Text As SVG Images\"\n    #.......................................................................................................\n    # @DIV { style: 'overflow:scroll;' }, =>\n    @TABLE { style: 'overflow:scroll;' }, =>\n      for fontnick in fontnicks\n        @TR =>\n          @TD =>\n            @TEXT fontnick\n          for glyph in glyphs\n            @TD =>\n              @GLYPHIMG fontnick, glyph\n    #.......................................................................................................\n    @JS     '/ops.js'\n    return null\n\n#-----------------------------------------------------------------------------------------------------------\n@slugs = ->\n  #.........................................................................................................\n  return @render =>\n    fontnicks = ( row.fontnick for row from SERVER.O.ucdb.db.fontnicks_with_outlines() )\n    ### TAINT consider to reqrite this so we call method on `SERVER`, not on `UCDB` ###\n    glyphs    = UCDB._XXX_get_all_glyphs_as_list_from_cfg_glyphsets SERVER.O.ucdb\n    slug      = glyphs.join ''\n    @layout()\n    @TITLE 'UCDB'\n    @DIV => \"UCDB\"\n    @H3 => \"Slugs (Multiple Glyphs in single SVG)\"\n    #.......................................................................................................\n    @TABLE =>\n      for fontnick in fontnicks\n        @TR =>\n          @TD =>\n            @TEXT fontnick\n          @TD =>\n            @SLUG fontnick, slug, { missing: 'drop', }\n    #.......................................................................................................\n    @DIV '.tags', =>\n      @SPAN '.tag', => '+edo'\n      @SPAN '.tag', => '+geometric'\n      @SPAN '.tag', => '+ming'\n      @SPAN '.tag', => '+skewed'\n      @SPAN '.tag', => '+kai'\n      @SPAN '.tag', => '+oblique'\n      @SPAN '.tag', => '+running'\n      @SPAN '.tag', => '+linear'\n      @SPAN '.tag', => '+square'\n      @SPAN '.tag', => '+round'\n      @SPAN '.tag', => '+regular'\n      @SPAN '.tag', => '+grass'\n      @SPAN '.tag', => '+clerical'\n      @SPAN '.tag', => '+seal'\n      @SPAN '.tag', => '+art'\n      @SPAN '.tag', => '+other'\n      @SPAN '.tag', => '+extralight'\n      @SPAN '.tag', => '+light'\n      @SPAN '.tag', => '+medium'\n      @SPAN '.tag', => '+bold'\n      @SPAN '.tag', => '+extrabold'\n    #.......................................................................................................\n    @JS     '/ops.js'\n    # @DIV '.news', =>\n    #   @RAW \"\"\"Any Turing-Complete lan&shy;guage can, in prin&shy;ci&shy;ple, com&shy;pute any&shy;thing any other Turing-Complete lan&shy;guage\n    #   can. I use NodeJS and my parsing library CaffeineEight to not only explain what it means for a\n    #   lan&shy;guage to be Turing-Complete but also build the parser and interpreter in less than 60 minutes and\n    #   80 lines of code. This is powerful stuff! Writing a toy programming lan&shy;guage doesn't have to be\n    #   difficult. With the right tools it can be easy and a useful exercise. At a minimum, it can be very\n    #   educational. Languages define the boundaries of our thinking. Writing your own lan&shy;guage, even if it's\n    #   just for play, helps you think way outside the box. And who knows, your new-found lan&shy;guage-writing\n    #   skills can also come in handy the next time you need a custom DSL or have to parse something more\n    #   complicated than regular expressions can handle.\"\"\"\n    # @DIV '#page-ready'\n    # @DIV '.ruler', => \"RULER\"\n    return null\n\n#-----------------------------------------------------------------------------------------------------------\n@grid = ( ctx ) ->\n  ### TAINT also implement listing from RSGs ###\n  debug '^33442^', ctx.query\n  fontnick      = ctx.query.fontnick  ? 'sunexta'\n  firstpage     = ctx.query.firstpage ? '4e'\n  lastpage      = ctx.query.lastpage  ? '4f'\n  # lastpage      = ctx.query.lastpage  ? '9f'\n  firstpage_cid = cast.ucdb_cid_codepage_number firstpage\n  lastpage_cid  = cast.ucdb_cid_codepage_number lastpage\n  [ firstpage_cid, lastpage_cid, ] = [ lastpage_cid, firstpage_cid, ] if firstpage_cid > lastpage_cid\n  firstpage     = ( ( firstpage_cid >> 8 ).toString 16 ).replace /00$/, ''\n  lastpage      = ( ( lastpage_cid  >> 8 ).toString 16 ).replace /00$/, ''\n  #.........................................................................................................\n  return @render =>\n    @layout()\n    @TITLE 'UCDB'\n    @DIV => \"UCDB\"\n    @H3 => \"Grid for CIDs 0x#{firstpage}00 ..0x#{lastpage}00\"\n    #.......................................................................................................\n    debug '^2772^', firstpage_cid, firstpage\n    debug '^2772^', lastpage_cid, lastpage\n    for cid0_table in [ firstpage_cid .. lastpage_cid ] by 0x100\n      cid1_table      = cid0_table + 0xff\n      cid0_table_hex  = cast.hex cid0_table\n      cid1_table_hex  = cast.hex cid1_table\n      @DIV '.xxxheading', \"#{cid0_table_hex}..#{cid1_table_hex} (#{fontnick})\"\n      @TABLE =>\n        # @TR '.xxxrow', =>\n        #   @TH '.xxxheader'\n        #   for delta in [ 0x0 .. 0xf ]\n        #     delta_hex = cast.hex delta\n        #     @TH '.xxxheader', => delta_hex\n        for cid0_row in [ cid0_table .. cid1_table ] by 0x10\n          cid0_row_hex = cast.hex cid0_row\n          @TR '.xxxrow', =>\n            @TH '.xxxheader', => cid0_row_hex\n            slug = ( ( String.fromCodePoint cid0_row + delta ) for delta in [ 0x0 .. 0xf ] ).join ''\n            @TD '.xxxdata', =>\n              @SLUG fontnick, slug, { missing: 'drop', }\n            null\n          null\n        null\n    null\n    #.......................................................................................................\n\n#-----------------------------------------------------------------------------------------------------------\n@harfbuzz = ( ctx ) ->\n  # debug '^33442^', ctx.query\n  # url       = COMMON.get_url '/v2/slug', { fontnick, text, }\n  # url       = '/v2/harfbuzz-sample.svg'\n  # width     = ( Array.from text ).length * ( 685 / 86 ) ### TAINT magic number, should be in styles ###\n  text      = \"sample text\"\n  width     = 100\n  width     = \"#{width}mm\"\n  height    = '10mm' ### TAINT magic number, should be in styles ###\n  style     = \"width:#{width};height:#{height};\"\n  #.........................................................................................................\n  return @render =>\n    @layout()\n    @TITLE \"SVG Typesetting with Harfbuzz and OpentypeJS\"\n    @STYLE \"body { background-color: #cf68; padding: 10mm; }\"\n    @H1 => \"SVG Typesetting with Harfbuzz and OpentypeJS\"\n    @P =>\n      @TEXT \"\"\"SVG with glyph outlines provided by opentype.js, typesetting metrics by harfbuzz. Outlines\n        are implemented as SVG symbols accessible via external resources, which is why we must\"\"\"\n      @UL =>\n        @LI =>\n          @TEXT \"use HTML \"; @CODE => \"<object>\"; @TEXT \" tags instead of \"\n          @CODE \"<img>\"\n          @TEXT \" tags (images are not allowed to reference external resources);\"\n        @LI =>\n          @TEXT \"\"\"use a web server and not open the current file directly in the browser, as it would then\n            not resolve the references in the loaded SVG.\"\"\"\n    @HR()\n    @DIV =>\n      @CODE \"./sample-glyph.svg\"; @BR()\n      @OBJECT { type: 'image/svg+xml', data: '/v2/harfbuzz-opentypejs-slug?text=AEIÖU',  style: 'outline:1px dotted red;width:250mm', }, =>\n        @DIV { style: 'outline:1px dotted blue;width:250mm', }, \"(Fallback for SVG here)\"\n      # @OBJECT { type: 'image/svg+xml', data: 'opentypejs-harfbuzz-svg/sample-glyph.svg', style: 'outline:1px dotted red;width:250mm', }, =>\n      #   @TEXT \"(Fallback for SVG here)\"\n    @DIV { style: \"width:10mm;height:10mm;background-color:red;\", }\n    # @IMG { class: 'slug', alt: text, src: 'opentypejs-harfbuzz-svg/sample-svg.html', style, }\n\n\n# #-----------------------------------------------------------------------------------------------------------\n# @layout = @FLOAT_layout\n\n\n\n"
  ]
}